// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#ifndef PROTOBUF_raft_2eproto__INCLUDED
#define PROTOBUF_raft_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tinynet {
namespace raft {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_raft_2eproto();
void protobuf_AssignDesc_raft_2eproto();
void protobuf_ShutdownFile_raft_2eproto();

class SnapshotData;
class LogEntryData;
class LogData;
class VoteReq;
class VoteResp;
class AppendEntriesReq;
class AppendEntriesResp;
class InstallSnapshotReq;
class InstallSnapshotResp;

// ===================================================================

class SnapshotData : public ::google::protobuf::Message {
 public:
  SnapshotData();
  virtual ~SnapshotData();

  SnapshotData(const SnapshotData& from);

  inline SnapshotData& operator=(const SnapshotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotData& default_instance();

  void Swap(SnapshotData* other);

  // implements Message ----------------------------------------------

  SnapshotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotData& from);
  void MergeFrom(const SnapshotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 index() const;
  inline void set_index(::google::protobuf::uint64 value);

  // optional uint64 term = 2;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 2;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tinynet.raft.SnapshotData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 term_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static SnapshotData* default_instance_;
};
// -------------------------------------------------------------------

class LogEntryData : public ::google::protobuf::Message {
 public:
  LogEntryData();
  virtual ~LogEntryData();

  LogEntryData(const LogEntryData& from);

  inline LogEntryData& operator=(const LogEntryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogEntryData& default_instance();

  void Swap(LogEntryData* other);

  // implements Message ----------------------------------------------

  LogEntryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogEntryData& from);
  void MergeFrom(const LogEntryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 index() const;
  inline void set_index(::google::protobuf::uint64 value);

  // optional uint64 term = 2;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 2;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tinynet.raft.LogEntryData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 term_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static LogEntryData* default_instance_;
};
// -------------------------------------------------------------------

class LogData : public ::google::protobuf::Message {
 public:
  LogData();
  virtual ~LogData();

  LogData(const LogData& from);

  inline LogData& operator=(const LogData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogData& default_instance();

  void Swap(LogData* other);

  // implements Message ----------------------------------------------

  LogData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogData& from);
  void MergeFrom(const LogData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tinynet.raft.LogEntryData logs = 1;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 1;
  inline const ::tinynet::raft::LogEntryData& logs(int index) const;
  inline ::tinynet::raft::LogEntryData* mutable_logs(int index);
  inline ::tinynet::raft::LogEntryData* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:tinynet.raft.LogData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData > logs_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static LogData* default_instance_;
};
// -------------------------------------------------------------------

class VoteReq : public ::google::protobuf::Message {
 public:
  VoteReq();
  virtual ~VoteReq();

  VoteReq(const VoteReq& from);

  inline VoteReq& operator=(const VoteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteReq& default_instance();

  void Swap(VoteReq* other);

  // implements Message ----------------------------------------------

  VoteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VoteReq& from);
  void MergeFrom(const VoteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peerId = 1;
  inline bool has_peerid() const;
  inline void clear_peerid();
  static const int kPeerIdFieldNumber = 1;
  inline ::google::protobuf::int32 peerid() const;
  inline void set_peerid(::google::protobuf::int32 value);

  // optional uint64 term = 2;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 2;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional int32 candidateId = 3;
  inline bool has_candidateid() const;
  inline void clear_candidateid();
  static const int kCandidateIdFieldNumber = 3;
  inline ::google::protobuf::int32 candidateid() const;
  inline void set_candidateid(::google::protobuf::int32 value);

  // optional uint64 lastLogIndex = 4;
  inline bool has_lastlogindex() const;
  inline void clear_lastlogindex();
  static const int kLastLogIndexFieldNumber = 4;
  inline ::google::protobuf::uint64 lastlogindex() const;
  inline void set_lastlogindex(::google::protobuf::uint64 value);

  // optional uint64 lastLogTerm = 5;
  inline bool has_lastlogterm() const;
  inline void clear_lastlogterm();
  static const int kLastLogTermFieldNumber = 5;
  inline ::google::protobuf::uint64 lastlogterm() const;
  inline void set_lastlogterm(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tinynet.raft.VoteReq)
 private:
  inline void set_has_peerid();
  inline void clear_has_peerid();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_candidateid();
  inline void clear_has_candidateid();
  inline void set_has_lastlogindex();
  inline void clear_has_lastlogindex();
  inline void set_has_lastlogterm();
  inline void clear_has_lastlogterm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::int32 peerid_;
  ::google::protobuf::int32 candidateid_;
  ::google::protobuf::uint64 lastlogindex_;
  ::google::protobuf::uint64 lastlogterm_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static VoteReq* default_instance_;
};
// -------------------------------------------------------------------

class VoteResp : public ::google::protobuf::Message {
 public:
  VoteResp();
  virtual ~VoteResp();

  VoteResp(const VoteResp& from);

  inline VoteResp& operator=(const VoteResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteResp& default_instance();

  void Swap(VoteResp* other);

  // implements Message ----------------------------------------------

  VoteResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VoteResp& from);
  void MergeFrom(const VoteResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional bool voteGranted = 2;
  inline bool has_votegranted() const;
  inline void clear_votegranted();
  static const int kVoteGrantedFieldNumber = 2;
  inline bool votegranted() const;
  inline void set_votegranted(bool value);

  // @@protoc_insertion_point(class_scope:tinynet.raft.VoteResp)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_votegranted();
  inline void clear_has_votegranted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  bool votegranted_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static VoteResp* default_instance_;
};
// -------------------------------------------------------------------

class AppendEntriesReq : public ::google::protobuf::Message {
 public:
  AppendEntriesReq();
  virtual ~AppendEntriesReq();

  AppendEntriesReq(const AppendEntriesReq& from);

  inline AppendEntriesReq& operator=(const AppendEntriesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesReq& default_instance();

  void Swap(AppendEntriesReq* other);

  // implements Message ----------------------------------------------

  AppendEntriesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppendEntriesReq& from);
  void MergeFrom(const AppendEntriesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // optional int32 peerId = 2;
  inline bool has_peerid() const;
  inline void clear_peerid();
  static const int kPeerIdFieldNumber = 2;
  inline ::google::protobuf::int32 peerid() const;
  inline void set_peerid(::google::protobuf::int32 value);

  // optional uint64 term = 3;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 3;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional int32 leaderId = 4;
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderIdFieldNumber = 4;
  inline ::google::protobuf::int32 leaderid() const;
  inline void set_leaderid(::google::protobuf::int32 value);

  // optional uint64 prevLogIndex = 5;
  inline bool has_prevlogindex() const;
  inline void clear_prevlogindex();
  static const int kPrevLogIndexFieldNumber = 5;
  inline ::google::protobuf::uint64 prevlogindex() const;
  inline void set_prevlogindex(::google::protobuf::uint64 value);

  // optional uint64 prevLogTerm = 6;
  inline bool has_prevlogterm() const;
  inline void clear_prevlogterm();
  static const int kPrevLogTermFieldNumber = 6;
  inline ::google::protobuf::uint64 prevlogterm() const;
  inline void set_prevlogterm(::google::protobuf::uint64 value);

  // repeated .tinynet.raft.LogEntryData entries = 7;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 7;
  inline const ::tinynet::raft::LogEntryData& entries(int index) const;
  inline ::tinynet::raft::LogEntryData* mutable_entries(int index);
  inline ::tinynet::raft::LogEntryData* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >*
      mutable_entries();

  // optional uint64 leaderCommit = 8;
  inline bool has_leadercommit() const;
  inline void clear_leadercommit();
  static const int kLeaderCommitFieldNumber = 8;
  inline ::google::protobuf::uint64 leadercommit() const;
  inline void set_leadercommit(::google::protobuf::uint64 value);

  // optional .tinynet.raft.SnapshotData snapshot = 9;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 9;
  inline const ::tinynet::raft::SnapshotData& snapshot() const;
  inline ::tinynet::raft::SnapshotData* mutable_snapshot();
  inline ::tinynet::raft::SnapshotData* release_snapshot();
  inline void set_allocated_snapshot(::tinynet::raft::SnapshotData* snapshot);

  // @@protoc_insertion_point(class_scope:tinynet.raft.AppendEntriesReq)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_peerid();
  inline void clear_has_peerid();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_prevlogindex();
  inline void clear_has_prevlogindex();
  inline void set_has_prevlogterm();
  inline void clear_has_prevlogterm();
  inline void set_has_leadercommit();
  inline void clear_has_leadercommit();
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::int32 peerid_;
  ::google::protobuf::int32 leaderid_;
  ::google::protobuf::uint64 prevlogindex_;
  ::google::protobuf::uint64 prevlogterm_;
  ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData > entries_;
  ::google::protobuf::uint64 leadercommit_;
  ::tinynet::raft::SnapshotData* snapshot_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static AppendEntriesReq* default_instance_;
};
// -------------------------------------------------------------------

class AppendEntriesResp : public ::google::protobuf::Message {
 public:
  AppendEntriesResp();
  virtual ~AppendEntriesResp();

  AppendEntriesResp(const AppendEntriesResp& from);

  inline AppendEntriesResp& operator=(const AppendEntriesResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesResp& default_instance();

  void Swap(AppendEntriesResp* other);

  // implements Message ----------------------------------------------

  AppendEntriesResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppendEntriesResp& from);
  void MergeFrom(const AppendEntriesResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional bool success = 2;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 2;
  inline bool success() const;
  inline void set_success(bool value);

  // optional uint64 matchIndex = 3;
  inline bool has_matchindex() const;
  inline void clear_matchindex();
  static const int kMatchIndexFieldNumber = 3;
  inline ::google::protobuf::uint64 matchindex() const;
  inline void set_matchindex(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tinynet.raft.AppendEntriesResp)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_matchindex();
  inline void clear_has_matchindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 matchindex_;
  bool success_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static AppendEntriesResp* default_instance_;
};
// -------------------------------------------------------------------

class InstallSnapshotReq : public ::google::protobuf::Message {
 public:
  InstallSnapshotReq();
  virtual ~InstallSnapshotReq();

  InstallSnapshotReq(const InstallSnapshotReq& from);

  inline InstallSnapshotReq& operator=(const InstallSnapshotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallSnapshotReq& default_instance();

  void Swap(InstallSnapshotReq* other);

  // implements Message ----------------------------------------------

  InstallSnapshotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstallSnapshotReq& from);
  void MergeFrom(const InstallSnapshotReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peerId = 1;
  inline bool has_peerid() const;
  inline void clear_peerid();
  static const int kPeerIdFieldNumber = 1;
  inline ::google::protobuf::int32 peerid() const;
  inline void set_peerid(::google::protobuf::int32 value);

  // optional uint64 term = 2;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 2;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // optional int32 leaderId = 3;
  inline bool has_leaderid() const;
  inline void clear_leaderid();
  static const int kLeaderIdFieldNumber = 3;
  inline ::google::protobuf::int32 leaderid() const;
  inline void set_leaderid(::google::protobuf::int32 value);

  // optional uint64 lastIncludedIndex = 4;
  inline bool has_lastincludedindex() const;
  inline void clear_lastincludedindex();
  static const int kLastIncludedIndexFieldNumber = 4;
  inline ::google::protobuf::uint64 lastincludedindex() const;
  inline void set_lastincludedindex(::google::protobuf::uint64 value);

  // optional uint64 lastIncludedTerm = 5;
  inline bool has_lastincludedterm() const;
  inline void clear_lastincludedterm();
  static const int kLastIncludedTermFieldNumber = 5;
  inline ::google::protobuf::uint64 lastincludedterm() const;
  inline void set_lastincludedterm(::google::protobuf::uint64 value);

  // optional uint32 offset = 6;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 6;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional bytes data = 7;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional bool done = 8;
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 8;
  inline bool done() const;
  inline void set_done(bool value);

  // @@protoc_insertion_point(class_scope:tinynet.raft.InstallSnapshotReq)
 private:
  inline void set_has_peerid();
  inline void clear_has_peerid();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_lastincludedindex();
  inline void clear_has_lastincludedindex();
  inline void set_has_lastincludedterm();
  inline void clear_has_lastincludedterm();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_done();
  inline void clear_has_done();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::int32 peerid_;
  ::google::protobuf::int32 leaderid_;
  ::google::protobuf::uint64 lastincludedindex_;
  ::google::protobuf::uint64 lastincludedterm_;
  ::std::string* data_;
  ::google::protobuf::uint32 offset_;
  bool done_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static InstallSnapshotReq* default_instance_;
};
// -------------------------------------------------------------------

class InstallSnapshotResp : public ::google::protobuf::Message {
 public:
  InstallSnapshotResp();
  virtual ~InstallSnapshotResp();

  InstallSnapshotResp(const InstallSnapshotResp& from);

  inline InstallSnapshotResp& operator=(const InstallSnapshotResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallSnapshotResp& default_instance();

  void Swap(InstallSnapshotResp* other);

  // implements Message ----------------------------------------------

  InstallSnapshotResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstallSnapshotResp& from);
  void MergeFrom(const InstallSnapshotResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::uint64 term() const;
  inline void set_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tinynet.raft.InstallSnapshotResp)
 private:
  inline void set_has_term();
  inline void clear_has_term();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  friend void  protobuf_AddDesc_raft_2eproto();
  friend void protobuf_AssignDesc_raft_2eproto();
  friend void protobuf_ShutdownFile_raft_2eproto();

  void InitAsDefaultInstance();
  static InstallSnapshotResp* default_instance_;
};
// ===================================================================

class RaftRpcService_Stub;

class RaftRpcService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RaftRpcService() {};
 public:
  virtual ~RaftRpcService();

  typedef RaftRpcService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void RequestVote(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::VoteReq* request,
                       ::tinynet::raft::VoteResp* response,
                       ::google::protobuf::Closure* done);
  virtual void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::AppendEntriesReq* request,
                       ::tinynet::raft::AppendEntriesResp* response,
                       ::google::protobuf::Closure* done);
  virtual void InstallSnapshot(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::InstallSnapshotReq* request,
                       ::tinynet::raft::InstallSnapshotResp* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftRpcService);
};

class RaftRpcService_Stub : public RaftRpcService {
 public:
  RaftRpcService_Stub(::google::protobuf::RpcChannel* channel);
  RaftRpcService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RaftRpcService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RaftRpcService ------------------------------------------

  void RequestVote(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::VoteReq* request,
                       ::tinynet::raft::VoteResp* response,
                       ::google::protobuf::Closure* done);
  void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::AppendEntriesReq* request,
                       ::tinynet::raft::AppendEntriesResp* response,
                       ::google::protobuf::Closure* done);
  void InstallSnapshot(::google::protobuf::RpcController* controller,
                       const ::tinynet::raft::InstallSnapshotReq* request,
                       ::tinynet::raft::InstallSnapshotResp* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftRpcService_Stub);
};


// ===================================================================


// ===================================================================

// SnapshotData

// optional uint64 index = 1;
inline bool SnapshotData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotData::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 SnapshotData::index() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.SnapshotData.index)
  return index_;
}
inline void SnapshotData::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.SnapshotData.index)
}

// optional uint64 term = 2;
inline bool SnapshotData::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnapshotData::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnapshotData::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnapshotData::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 SnapshotData::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.SnapshotData.term)
  return term_;
}
inline void SnapshotData::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.SnapshotData.term)
}

// optional bytes data = 3;
inline bool SnapshotData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnapshotData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnapshotData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnapshotData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& SnapshotData::data() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.SnapshotData.data)
  return *data_;
}
inline void SnapshotData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:tinynet.raft.SnapshotData.data)
}
inline void SnapshotData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:tinynet.raft.SnapshotData.data)
}
inline void SnapshotData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tinynet.raft.SnapshotData.data)
}
inline ::std::string* SnapshotData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tinynet.raft.SnapshotData.data)
  return data_;
}
inline ::std::string* SnapshotData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SnapshotData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tinynet.raft.SnapshotData.data)
}

// -------------------------------------------------------------------

// LogEntryData

// optional uint64 index = 1;
inline bool LogEntryData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogEntryData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogEntryData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogEntryData::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 LogEntryData::index() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.LogEntryData.index)
  return index_;
}
inline void LogEntryData::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.LogEntryData.index)
}

// optional uint64 term = 2;
inline bool LogEntryData::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogEntryData::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogEntryData::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogEntryData::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 LogEntryData::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.LogEntryData.term)
  return term_;
}
inline void LogEntryData::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.LogEntryData.term)
}

// optional bytes data = 3;
inline bool LogEntryData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogEntryData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogEntryData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogEntryData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& LogEntryData::data() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.LogEntryData.data)
  return *data_;
}
inline void LogEntryData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:tinynet.raft.LogEntryData.data)
}
inline void LogEntryData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:tinynet.raft.LogEntryData.data)
}
inline void LogEntryData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tinynet.raft.LogEntryData.data)
}
inline ::std::string* LogEntryData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tinynet.raft.LogEntryData.data)
  return data_;
}
inline ::std::string* LogEntryData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LogEntryData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tinynet.raft.LogEntryData.data)
}

// -------------------------------------------------------------------

// LogData

// repeated .tinynet.raft.LogEntryData logs = 1;
inline int LogData::logs_size() const {
  return logs_.size();
}
inline void LogData::clear_logs() {
  logs_.Clear();
}
inline const ::tinynet::raft::LogEntryData& LogData::logs(int index) const {
  // @@protoc_insertion_point(field_get:tinynet.raft.LogData.logs)
  return logs_.Get(index);
}
inline ::tinynet::raft::LogEntryData* LogData::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:tinynet.raft.LogData.logs)
  return logs_.Mutable(index);
}
inline ::tinynet::raft::LogEntryData* LogData::add_logs() {
  // @@protoc_insertion_point(field_add:tinynet.raft.LogData.logs)
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >&
LogData::logs() const {
  // @@protoc_insertion_point(field_list:tinynet.raft.LogData.logs)
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >*
LogData::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:tinynet.raft.LogData.logs)
  return &logs_;
}

// -------------------------------------------------------------------

// VoteReq

// optional int32 peerId = 1;
inline bool VoteReq::has_peerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteReq::set_has_peerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteReq::clear_has_peerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteReq::clear_peerid() {
  peerid_ = 0;
  clear_has_peerid();
}
inline ::google::protobuf::int32 VoteReq::peerid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteReq.peerId)
  return peerid_;
}
inline void VoteReq::set_peerid(::google::protobuf::int32 value) {
  set_has_peerid();
  peerid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteReq.peerId)
}

// optional uint64 term = 2;
inline bool VoteReq::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteReq::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteReq::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteReq::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 VoteReq::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteReq.term)
  return term_;
}
inline void VoteReq::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteReq.term)
}

// optional int32 candidateId = 3;
inline bool VoteReq::has_candidateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoteReq::set_has_candidateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoteReq::clear_has_candidateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoteReq::clear_candidateid() {
  candidateid_ = 0;
  clear_has_candidateid();
}
inline ::google::protobuf::int32 VoteReq::candidateid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteReq.candidateId)
  return candidateid_;
}
inline void VoteReq::set_candidateid(::google::protobuf::int32 value) {
  set_has_candidateid();
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteReq.candidateId)
}

// optional uint64 lastLogIndex = 4;
inline bool VoteReq::has_lastlogindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoteReq::set_has_lastlogindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoteReq::clear_has_lastlogindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoteReq::clear_lastlogindex() {
  lastlogindex_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogindex();
}
inline ::google::protobuf::uint64 VoteReq::lastlogindex() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteReq.lastLogIndex)
  return lastlogindex_;
}
inline void VoteReq::set_lastlogindex(::google::protobuf::uint64 value) {
  set_has_lastlogindex();
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteReq.lastLogIndex)
}

// optional uint64 lastLogTerm = 5;
inline bool VoteReq::has_lastlogterm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VoteReq::set_has_lastlogterm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VoteReq::clear_has_lastlogterm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VoteReq::clear_lastlogterm() {
  lastlogterm_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogterm();
}
inline ::google::protobuf::uint64 VoteReq::lastlogterm() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteReq.lastLogTerm)
  return lastlogterm_;
}
inline void VoteReq::set_lastlogterm(::google::protobuf::uint64 value) {
  set_has_lastlogterm();
  lastlogterm_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteReq.lastLogTerm)
}

// -------------------------------------------------------------------

// VoteResp

// optional uint64 term = 1;
inline bool VoteResp::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteResp::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteResp::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteResp::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 VoteResp::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteResp.term)
  return term_;
}
inline void VoteResp::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteResp.term)
}

// optional bool voteGranted = 2;
inline bool VoteResp::has_votegranted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteResp::set_has_votegranted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteResp::clear_has_votegranted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteResp::clear_votegranted() {
  votegranted_ = false;
  clear_has_votegranted();
}
inline bool VoteResp::votegranted() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.VoteResp.voteGranted)
  return votegranted_;
}
inline void VoteResp::set_votegranted(bool value) {
  set_has_votegranted();
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.VoteResp.voteGranted)
}

// -------------------------------------------------------------------

// AppendEntriesReq

// optional int64 timestamp = 1;
inline bool AppendEntriesReq::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesReq::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesReq::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesReq::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 AppendEntriesReq::timestamp() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.timestamp)
  return timestamp_;
}
inline void AppendEntriesReq::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.timestamp)
}

// optional int32 peerId = 2;
inline bool AppendEntriesReq::has_peerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesReq::set_has_peerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesReq::clear_has_peerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesReq::clear_peerid() {
  peerid_ = 0;
  clear_has_peerid();
}
inline ::google::protobuf::int32 AppendEntriesReq::peerid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.peerId)
  return peerid_;
}
inline void AppendEntriesReq::set_peerid(::google::protobuf::int32 value) {
  set_has_peerid();
  peerid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.peerId)
}

// optional uint64 term = 3;
inline bool AppendEntriesReq::has_term() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesReq::set_has_term() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesReq::clear_has_term() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesReq::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 AppendEntriesReq::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.term)
  return term_;
}
inline void AppendEntriesReq::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.term)
}

// optional int32 leaderId = 4;
inline bool AppendEntriesReq::has_leaderid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppendEntriesReq::set_has_leaderid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppendEntriesReq::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppendEntriesReq::clear_leaderid() {
  leaderid_ = 0;
  clear_has_leaderid();
}
inline ::google::protobuf::int32 AppendEntriesReq::leaderid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.leaderId)
  return leaderid_;
}
inline void AppendEntriesReq::set_leaderid(::google::protobuf::int32 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.leaderId)
}

// optional uint64 prevLogIndex = 5;
inline bool AppendEntriesReq::has_prevlogindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppendEntriesReq::set_has_prevlogindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppendEntriesReq::clear_has_prevlogindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppendEntriesReq::clear_prevlogindex() {
  prevlogindex_ = GOOGLE_ULONGLONG(0);
  clear_has_prevlogindex();
}
inline ::google::protobuf::uint64 AppendEntriesReq::prevlogindex() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.prevLogIndex)
  return prevlogindex_;
}
inline void AppendEntriesReq::set_prevlogindex(::google::protobuf::uint64 value) {
  set_has_prevlogindex();
  prevlogindex_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.prevLogIndex)
}

// optional uint64 prevLogTerm = 6;
inline bool AppendEntriesReq::has_prevlogterm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppendEntriesReq::set_has_prevlogterm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppendEntriesReq::clear_has_prevlogterm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppendEntriesReq::clear_prevlogterm() {
  prevlogterm_ = GOOGLE_ULONGLONG(0);
  clear_has_prevlogterm();
}
inline ::google::protobuf::uint64 AppendEntriesReq::prevlogterm() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.prevLogTerm)
  return prevlogterm_;
}
inline void AppendEntriesReq::set_prevlogterm(::google::protobuf::uint64 value) {
  set_has_prevlogterm();
  prevlogterm_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.prevLogTerm)
}

// repeated .tinynet.raft.LogEntryData entries = 7;
inline int AppendEntriesReq::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesReq::clear_entries() {
  entries_.Clear();
}
inline const ::tinynet::raft::LogEntryData& AppendEntriesReq::entries(int index) const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.entries)
  return entries_.Get(index);
}
inline ::tinynet::raft::LogEntryData* AppendEntriesReq::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:tinynet.raft.AppendEntriesReq.entries)
  return entries_.Mutable(index);
}
inline ::tinynet::raft::LogEntryData* AppendEntriesReq::add_entries() {
  // @@protoc_insertion_point(field_add:tinynet.raft.AppendEntriesReq.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >&
AppendEntriesReq::entries() const {
  // @@protoc_insertion_point(field_list:tinynet.raft.AppendEntriesReq.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::tinynet::raft::LogEntryData >*
AppendEntriesReq::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:tinynet.raft.AppendEntriesReq.entries)
  return &entries_;
}

// optional uint64 leaderCommit = 8;
inline bool AppendEntriesReq::has_leadercommit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppendEntriesReq::set_has_leadercommit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppendEntriesReq::clear_has_leadercommit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppendEntriesReq::clear_leadercommit() {
  leadercommit_ = GOOGLE_ULONGLONG(0);
  clear_has_leadercommit();
}
inline ::google::protobuf::uint64 AppendEntriesReq::leadercommit() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.leaderCommit)
  return leadercommit_;
}
inline void AppendEntriesReq::set_leadercommit(::google::protobuf::uint64 value) {
  set_has_leadercommit();
  leadercommit_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesReq.leaderCommit)
}

// optional .tinynet.raft.SnapshotData snapshot = 9;
inline bool AppendEntriesReq::has_snapshot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppendEntriesReq::set_has_snapshot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppendEntriesReq::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppendEntriesReq::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::tinynet::raft::SnapshotData::Clear();
  clear_has_snapshot();
}
inline const ::tinynet::raft::SnapshotData& AppendEntriesReq::snapshot() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesReq.snapshot)
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::tinynet::raft::SnapshotData* AppendEntriesReq::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::tinynet::raft::SnapshotData;
  // @@protoc_insertion_point(field_mutable:tinynet.raft.AppendEntriesReq.snapshot)
  return snapshot_;
}
inline ::tinynet::raft::SnapshotData* AppendEntriesReq::release_snapshot() {
  clear_has_snapshot();
  ::tinynet::raft::SnapshotData* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void AppendEntriesReq::set_allocated_snapshot(::tinynet::raft::SnapshotData* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:tinynet.raft.AppendEntriesReq.snapshot)
}

// -------------------------------------------------------------------

// AppendEntriesResp

// optional uint64 term = 1;
inline bool AppendEntriesResp::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesResp::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesResp::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesResp::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 AppendEntriesResp::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesResp.term)
  return term_;
}
inline void AppendEntriesResp::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesResp.term)
}

// optional bool success = 2;
inline bool AppendEntriesResp::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesResp::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesResp::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesResp::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool AppendEntriesResp::success() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesResp.success)
  return success_;
}
inline void AppendEntriesResp::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesResp.success)
}

// optional uint64 matchIndex = 3;
inline bool AppendEntriesResp::has_matchindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesResp::set_has_matchindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesResp::clear_has_matchindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesResp::clear_matchindex() {
  matchindex_ = GOOGLE_ULONGLONG(0);
  clear_has_matchindex();
}
inline ::google::protobuf::uint64 AppendEntriesResp::matchindex() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.AppendEntriesResp.matchIndex)
  return matchindex_;
}
inline void AppendEntriesResp::set_matchindex(::google::protobuf::uint64 value) {
  set_has_matchindex();
  matchindex_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.AppendEntriesResp.matchIndex)
}

// -------------------------------------------------------------------

// InstallSnapshotReq

// optional int32 peerId = 1;
inline bool InstallSnapshotReq::has_peerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstallSnapshotReq::set_has_peerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstallSnapshotReq::clear_has_peerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstallSnapshotReq::clear_peerid() {
  peerid_ = 0;
  clear_has_peerid();
}
inline ::google::protobuf::int32 InstallSnapshotReq::peerid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.peerId)
  return peerid_;
}
inline void InstallSnapshotReq::set_peerid(::google::protobuf::int32 value) {
  set_has_peerid();
  peerid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.peerId)
}

// optional uint64 term = 2;
inline bool InstallSnapshotReq::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstallSnapshotReq::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstallSnapshotReq::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstallSnapshotReq::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 InstallSnapshotReq::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.term)
  return term_;
}
inline void InstallSnapshotReq::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.term)
}

// optional int32 leaderId = 3;
inline bool InstallSnapshotReq::has_leaderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstallSnapshotReq::set_has_leaderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstallSnapshotReq::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstallSnapshotReq::clear_leaderid() {
  leaderid_ = 0;
  clear_has_leaderid();
}
inline ::google::protobuf::int32 InstallSnapshotReq::leaderid() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.leaderId)
  return leaderid_;
}
inline void InstallSnapshotReq::set_leaderid(::google::protobuf::int32 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.leaderId)
}

// optional uint64 lastIncludedIndex = 4;
inline bool InstallSnapshotReq::has_lastincludedindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstallSnapshotReq::set_has_lastincludedindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstallSnapshotReq::clear_has_lastincludedindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstallSnapshotReq::clear_lastincludedindex() {
  lastincludedindex_ = GOOGLE_ULONGLONG(0);
  clear_has_lastincludedindex();
}
inline ::google::protobuf::uint64 InstallSnapshotReq::lastincludedindex() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.lastIncludedIndex)
  return lastincludedindex_;
}
inline void InstallSnapshotReq::set_lastincludedindex(::google::protobuf::uint64 value) {
  set_has_lastincludedindex();
  lastincludedindex_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.lastIncludedIndex)
}

// optional uint64 lastIncludedTerm = 5;
inline bool InstallSnapshotReq::has_lastincludedterm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstallSnapshotReq::set_has_lastincludedterm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstallSnapshotReq::clear_has_lastincludedterm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstallSnapshotReq::clear_lastincludedterm() {
  lastincludedterm_ = GOOGLE_ULONGLONG(0);
  clear_has_lastincludedterm();
}
inline ::google::protobuf::uint64 InstallSnapshotReq::lastincludedterm() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.lastIncludedTerm)
  return lastincludedterm_;
}
inline void InstallSnapshotReq::set_lastincludedterm(::google::protobuf::uint64 value) {
  set_has_lastincludedterm();
  lastincludedterm_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.lastIncludedTerm)
}

// optional uint32 offset = 6;
inline bool InstallSnapshotReq::has_offset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InstallSnapshotReq::set_has_offset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InstallSnapshotReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InstallSnapshotReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 InstallSnapshotReq::offset() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.offset)
  return offset_;
}
inline void InstallSnapshotReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.offset)
}

// optional bytes data = 7;
inline bool InstallSnapshotReq::has_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InstallSnapshotReq::set_has_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InstallSnapshotReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InstallSnapshotReq::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& InstallSnapshotReq::data() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.data)
  return *data_;
}
inline void InstallSnapshotReq::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.data)
}
inline void InstallSnapshotReq::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:tinynet.raft.InstallSnapshotReq.data)
}
inline void InstallSnapshotReq::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tinynet.raft.InstallSnapshotReq.data)
}
inline ::std::string* InstallSnapshotReq::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tinynet.raft.InstallSnapshotReq.data)
  return data_;
}
inline ::std::string* InstallSnapshotReq::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InstallSnapshotReq::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tinynet.raft.InstallSnapshotReq.data)
}

// optional bool done = 8;
inline bool InstallSnapshotReq::has_done() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InstallSnapshotReq::set_has_done() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InstallSnapshotReq::clear_has_done() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InstallSnapshotReq::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool InstallSnapshotReq::done() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotReq.done)
  return done_;
}
inline void InstallSnapshotReq::set_done(bool value) {
  set_has_done();
  done_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotReq.done)
}

// -------------------------------------------------------------------

// InstallSnapshotResp

// optional uint64 term = 1;
inline bool InstallSnapshotResp::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstallSnapshotResp::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstallSnapshotResp::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstallSnapshotResp::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 InstallSnapshotResp::term() const {
  // @@protoc_insertion_point(field_get:tinynet.raft.InstallSnapshotResp.term)
  return term_;
}
inline void InstallSnapshotResp::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:tinynet.raft.InstallSnapshotResp.term)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace raft
}  // namespace tinynet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_2eproto__INCLUDED
